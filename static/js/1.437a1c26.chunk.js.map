{"version":3,"sources":["../static/js/1.437a1c26.chunk.js","arts/th_pegpanel.jsx","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","arts/th_layout.jsx"],"names":["webpackJsonp","16","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2_react_jss__","__WEBPACK_IMPORTED_MODULE_2_react_jss___default","__WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","PegPanel","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","ro","entries","observer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","_entry$contentRect","contentRect","left","top","width","height","err","return","observe","a","findDOMNode","_props","classes","style","onpanelclick","children","id","createElement","onClick","className","pegpanel","lpan","rpan","Component","borderLeft","borderRight","display","justifyContent","borderRadius","backgroundColor","zIndex","opacity","cursor","pointerEvents","&:hover","170","global","toFloat","parseFloat","getBordersSize","styles","positions","len","reduce","size","position","getPaddings","paddings","list","getSVGContentRect","bbox","getBBox","createRectInit","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","getWindowOf","getComputedStyle","horizPad","right","vertPad","bottom","boxSizing","Math","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","document","documentElement","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","x","y","Constr","DOMRectReadOnly","rect","defineConfigurable","MapShim","getIndex","arr","result","some","index","Map","anonymous","__entries__","prototypeAccessors","get","set","push","delete","splice","has","clear","forEach","callback","ctx","this$1","window","global$1","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","resolvePending","leadingCall","trailingCall","proxy","timeoutCallback","timeStamp","lastCallTime","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","keys","ownerDocument","defaultView","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","20","__WEBPACK_IMPORTED_MODULE_1_react_jss__","__WEBPACK_IMPORTED_MODULE_1_react_jss___default","__WEBPACK_IMPORTED_MODULE_2__th_pegpanel__","pegstyle","numpeg","textAlign","gridRow","gridColumn","num","color","border","fontSize","lineHeight","alignSelf","Numpeg","NumPeg","THLayout","_ref2","towergrid","Fragment","gridArea","instruct","alignContent","justifyItems","gridAutoFlow","@media  (min-width:600px)","gridTemplateRows","gridTemplateColumns","@media  (max-width:600px)","gridGap","padding","minWidth","borderTop","paddingTop","styledLayout"],"mappings":"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","file":"static/js/1.437a1c26.chunk.js","sourcesContent":["webpackJsonp([1,2],{\n\n/***/ 16:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(56);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_jss__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_jss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_jss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__ = __webpack_require__(170);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/*\r\nconst PegPanel = ({ classes, style, children, onpanelclick, id }) => {\r\n    return (\r\n        <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n    )\r\n}\r\n*/var PegPanel=function(_React$Component){_inherits(PegPanel,_React$Component);function PegPanel(){var _ref;var _temp,_this,_ret;_classCallCheck(this,PegPanel);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=PegPanel.__proto__||Object.getPrototypeOf(PegPanel)).call.apply(_ref,[this].concat(args))),_this),_this.ro=new __WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__[\"a\" /* default */](function(entries,observer){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=entries[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var entry=_step.value;var _entry$contentRect=entry.contentRect,left=_entry$contentRect.left,top=_entry$contentRect.top,width=_entry$contentRect.width,height=_entry$contentRect.height;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}),_temp),_possibleConstructorReturn(_this,_ret);}_createClass(PegPanel,[{key:'componentDidMount',value:function componentDidMount(){this.ro.observe(__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.findDOMNode(this));//console.log(ReactDOM.findDOMNode(PegPanel))\n}//сделать HOC???\n},{key:'render',value:function render(){var _props=this.props,classes=_props.classes,style=_props.style,children=_props.children,onpanelclick=_props.onpanelclick,id=_props.id;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{id:id,onClick:onpanelclick,className:classes.pegpanel,style:style},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.lpan}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.rpan}));}}]);return PegPanel;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);var style={rpan:{borderLeft:'2px solid #55b4fa',width:'50%'},lpan:{borderRight:'2px solid blue',width:'50%'},pegpanel:{display:'flex',justifyContent:'center',width:'100%',borderRadius:15,height:'101%',backgroundColor:'#e5fdff',zIndex:0,opacity:1,cursor:'pointer',pointerEvents:'auto','&:hover':{opacity:0.91,backgroundColor:'#49fefe'}}};/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_2_react_jss___default()(style)(PegPanel));///setAreas\n\n/***/ }),\n\n/***/ 170:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_jss__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_jss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_jss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__th_pegpanel__ = __webpack_require__(16);\nvar pegstyle={numpeg:{textAlign:'center',gridRow:'2/2',gridColumn:function gridColumn(props){return props.num;},color:'blue',border:'1px solid blue',borderRadius:20,height:20,width:20,fontSize:14,lineHeight:'20px',//justifySelf: 'center',\nalignSelf:'center'}};var Numpeg=function Numpeg(_ref){var classes=_ref.classes,children=_ref.children;//выводит номера стержней\nreturn __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.numpeg},children);};var NumPeg=__WEBPACK_IMPORTED_MODULE_1_react_jss___default()(pegstyle)(Numpeg);var THLayout=function THLayout(_ref2){var classes=_ref2.classes,children=_ref2.children,onpanelclick=_ref2.onpanelclick;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.towergrid},[1,2,3].map(function(n){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NumPeg,{num:n},n),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__th_pegpanel__[\"default\"],{id:n,onpanelclick:onpanelclick,style:{gridArea:'3 / '+n+' / 11 / '+(n+1)}}));}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:classes.instruct},'\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0438\\u0440\\u0430\\u043C\\u0438\\u0434\\u0443 \\u043D\\u0430 2-\\u0439 \\u0441\\u0442\\u0435\\u0440\\u0436\\u0435\\u043D\\u044C. \\u0411\\u043E\\u043B\\u044C\\u0448\\u0438\\u0439 \\u0434\\u0438\\u0441\\u043A \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u043A\\u043B\\u0430\\u0441\\u0442\\u044C \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0439.'),children);};var style={// основная раскладка\ntowergrid:{display:'grid',position:'relative',alignContent:'end',justifyItems:'center',gridAutoFlow:'column',//gridTemplateColumns: 'repeat(3,1fr) minmax(180px, 1fr)',\n//gridTemplateRows: props => (\"0px 25px 70px  repeat(\" + props.rowcount + \",25px)\" + \" 55px\"),\n'@media  (min-width:600px)':{gridTemplateRows:\"20px 25px 70px  repeat(7,25px) 55px\",gridTemplateColumns:'repeat(3,1fr) minmax(170px, 1fr)'},'@media  (max-width:600px)':{gridTemplateRows:\"auto 25px 70px  repeat(7,25px) 55px\",gridTemplateColumns:'repeat(3,1fr)'},gridGap:'2px 10px',backgroundColor:'#d5e9f2;',//'#f5f5f5',\npadding:20,width:'auto',minWidth:400,color:'white'},instruct:{borderTop:'1px solid silver',alignSelf:'stretch',paddingTop:10,color:'#676571;',fontSize:16,gridArea:'11 / 1 / 12 / 6'}};var styledLayout=__WEBPACK_IMPORTED_MODULE_1_react_jss___default()(style);/* harmony default export */ __webpack_exports__[\"default\"] = (styledLayout(THLayout));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.437a1c26.chunk.js","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport injectSheet from 'react-jss'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\n\r\n/*\r\nconst PegPanel = ({ classes, style, children, onpanelclick, id }) => {\r\n    return (\r\n        <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n    )\r\n}\r\n*/\r\nclass PegPanel extends React.Component {\r\n    componentDidMount() {\r\n        this.ro.observe(ReactDOM.findDOMNode(this));\r\n    //console.log(ReactDOM.findDOMNode(PegPanel))\r\n    }\r\n    \r\n    //сделать HOC???\r\n    ro = new ResizeObserver((entries, observer) => {\r\n        for (const entry of entries) {\r\n            const {left, top, width, height} = entry.contentRect;\r\n    \r\n        }\r\n    });\r\n    \r\n\r\n\r\n\r\n\r\n    render(){\r\n        const { classes, style, children, onpanelclick, id } = this.props\r\n        return(\r\n            <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst style = {\r\n    rpan: {\r\n        borderLeft: '2px solid #55b4fa',\r\n        width: '50%'\r\n    },\r\n    lpan: {\r\n        borderRight: '2px solid blue',\r\n        width: '50%'\r\n    },\r\n    pegpanel: {\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        width:'100%',\r\n        borderRadius:15,\r\n       height: '101%',\r\n        backgroundColor:'#e5fdff',\r\n        zIndex: 0,\r\n        opacity: 1,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        '&:hover': {\r\n            opacity: 0.91,\r\n            backgroundColor:'#49fefe'\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default injectSheet(style)(PegPanel); ///setAreas\n\n\n// WEBPACK FOOTER //\n// ./src/arts/th_pegpanel.jsx","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 170\n// module chunks = 0 1 2","import React from 'react'\r\nimport injectSheet from 'react-jss'\r\nimport PegPanel from './th_pegpanel'\r\n\r\nconst pegstyle = {\r\n    numpeg: {\r\n        textAlign: 'center',\r\n        gridRow: '2/2',\r\n        gridColumn: props => props.num,\r\n        color: 'blue',\r\n        border: '1px solid blue',\r\n        borderRadius: 20,\r\n        height: 20,\r\n        width: 20,\r\n        fontSize: 14,\r\n    lineHeight: '20px',\r\n    //justifySelf: 'center',\r\n    alignSelf: 'center',\r\n\r\n\r\n    }\r\n}\r\nconst Numpeg = ({ classes, children }) => {//выводит номера стержней\r\n    return (\r\n        <div className={classes.numpeg}>{children}</div>\r\n    )\r\n}\r\nconst NumPeg = injectSheet(pegstyle)(Numpeg);\r\n\r\nconst THLayout = ({ classes, children, onpanelclick }) => {\r\n    return (\r\n        <div className={classes.towergrid}>\r\n            {[1, 2, 3].map(n => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <NumPeg num={n}>{n}</NumPeg>\r\n                        <PegPanel id={n} onpanelclick={onpanelclick} style={{ gridArea: `3 / ${n} / 11 / ${n + 1}` }} />\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n            <p className={classes.instruct}>\r\n                Переместите пирамиду на 2-й стержень. Больший диск нельзя класть на меньший.\r\n            </p>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nconst style = { // основная раскладка\r\n    towergrid: {\r\n        display: 'grid',\r\n        position: 'relative',\r\n        alignContent: 'end',\r\n        justifyItems: 'center',\r\n        gridAutoFlow: 'column',\r\n        //gridTemplateColumns: 'repeat(3,1fr) minmax(180px, 1fr)',\r\n        //gridTemplateRows: props => (\"0px 25px 70px  repeat(\" + props.rowcount + \",25px)\" + \" 55px\"),\r\n        '@media  (min-width:600px)':{\r\n            gridTemplateRows: \"20px 25px 70px  repeat(7,25px) 55px\",\r\n            gridTemplateColumns: 'repeat(3,1fr) minmax(170px, 1fr)'\r\n        },\r\n        '@media  (max-width:600px)':{\r\n            gridTemplateRows: \"auto 25px 70px  repeat(7,25px) 55px\",\r\n            gridTemplateColumns: 'repeat(3,1fr)'\r\n        },\r\n\r\n        gridGap: '2px 10px',\r\n        backgroundColor:'#d5e9f2;', //'#f5f5f5',\r\n        padding: 20,\r\n        width: 'auto',\r\n        minWidth:400,\r\n        color: 'white'\r\n    },\r\n    instruct:{\r\n        borderTop: '1px solid silver',\r\n        alignSelf: 'stretch',\r\n        paddingTop: 10,\r\n        color: '#676571;',\r\n        fontSize: 16,\r\n        gridArea: '11 / 1 / 12 / 6'\r\n    }\r\n}\r\n\r\nconst styledLayout = injectSheet(style);\r\nexport default styledLayout(THLayout);\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/arts/th_layout.jsx"],"sourceRoot":""}