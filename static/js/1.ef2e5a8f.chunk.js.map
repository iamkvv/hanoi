{"version":3,"sources":["../static/js/1.ef2e5a8f.chunk.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","arts/th_pegpanel.jsx","arts/th_layout.jsx"],"names":["webpackJsonp","150","module","__webpack_exports__","__webpack_require__","global","toFloat","value","parseFloat","getBordersSize","styles","positions","len","arguments","length","reduce","size","position","getPaddings","paddings","i","list","getSVGContentRect","target","bbox","getBBox","createRectInit","width","height","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","getWindowOf","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","Math","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","document","documentElement","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","x","y","Constr","DOMRectReadOnly","Object","rect","create","prototype","defineConfigurable","MapShim","getIndex","arr","key","result","some","entry","index","Map","anonymous","this","__entries__","prototypeAccessors","configurable","get","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","this$1","call","defineProperties","window","global$1","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","resolvePending","leadingCall","trailingCall","proxy","timeoutCallback","timeStamp","lastCallTime","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","props","keys","defineProperty","enumerable","writable","ownerDocument","defaultView","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply","41","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2_react_jss__","__WEBPACK_IMPORTED_MODULE_2_react_jss___default","__WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__","_createClass","descriptor","protoProps","staticProps","PegPanel","_React$Component","_ref","_temp","_this","_ret","_len","args","Array","_key","getPrototypeOf","concat","ro","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_entry$contentRect","console","log","err","return","a","findDOMNode","_props","classes","style","onpanelclick","children","id","createElement","onClick","className","pegpanel","lpan","rpan","Component","borderLeft","borderRight","display","justifyContent","borderRadius","backgroundColor","zIndex","opacity","cursor","pointerEvents","&:hover","46","__WEBPACK_IMPORTED_MODULE_1_react_jss__","__WEBPACK_IMPORTED_MODULE_1_react_jss___default","__WEBPACK_IMPORTED_MODULE_2__th_pegpanel__","pegstyle","numpeg","textAlign","gridRow","gridColumn","num","color","border","fontSize","lineHeight","alignSelf","Numpeg","NumPeg","THLayout","_ref2","towergrid","Fragment","gridArea","instruct","alignContent","justifyItems","gridAutoFlow","@media  (min-width:600px)","gridTemplateRows","gridTemplateColumns","@media  (max-width:600px)","gridGap","padding","minWidth","borderTop","paddingTop","styledLayout"],"mappings":"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","file":"static/js/1.ef2e5a8f.chunk.js","sourcesContent":["webpackJsonp([1,2],{\n\n/***/ 150:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 41:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_jss__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_jss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_jss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__ = __webpack_require__(150);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/*\r\nconst PegPanel = ({ classes, style, children, onpanelclick, id }) => {\r\n    return (\r\n        <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n    )\r\n}\r\n*/var PegPanel=function(_React$Component){_inherits(PegPanel,_React$Component);function PegPanel(){var _ref;var _temp,_this,_ret;_classCallCheck(this,PegPanel);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=PegPanel.__proto__||Object.getPrototypeOf(PegPanel)).call.apply(_ref,[this].concat(args))),_this),_this.ro=new __WEBPACK_IMPORTED_MODULE_3_resize_observer_polyfill__[\"a\" /* default */](function(entries,observer){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=entries[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var entry=_step.value;var _entry$contentRect=entry.contentRect,left=_entry$contentRect.left,top=_entry$contentRect.top,width=_entry$contentRect.width,height=_entry$contentRect.height;console.log('Element:',entry.target);// debugger;\nconsole.log('Element\\'s size: '+width+'px x '+height+'px');console.log('Element\\'s paddings: '+top+'px ; '+left+'px');}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}),_temp),_possibleConstructorReturn(_this,_ret);}_createClass(PegPanel,[{key:'componentDidMount',value:function componentDidMount(){this.ro.observe(__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.findDOMNode(this));//console.log(ReactDOM.findDOMNode(PegPanel))\n}//сделать HOC???\n},{key:'render',value:function render(){var _props=this.props,classes=_props.classes,style=_props.style,children=_props.children,onpanelclick=_props.onpanelclick,id=_props.id;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{id:id,onClick:onpanelclick,className:classes.pegpanel,style:style},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.lpan}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.rpan}));}}]);return PegPanel;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);var style={rpan:{borderLeft:'2px solid #55b4fa',width:'50%'},lpan:{borderRight:'2px solid blue',width:'50%'},pegpanel:{display:'flex',justifyContent:'center',width:'100%',borderRadius:15,height:'101%',backgroundColor:'#e5fdff',zIndex:0,opacity:1,cursor:'pointer',pointerEvents:'auto','&:hover':{opacity:0.91,backgroundColor:'#49fefe'}}};/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_2_react_jss___default()(style)(PegPanel));///setAreas\n\n/***/ }),\n\n/***/ 46:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_jss__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_jss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_jss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__th_pegpanel__ = __webpack_require__(41);\nvar pegstyle={numpeg:{textAlign:'center',gridRow:'2/2',gridColumn:function gridColumn(props){return props.num;},color:'blue',border:'1px solid blue',borderRadius:20,height:20,width:20,fontSize:14,lineHeight:'20px',//justifySelf: 'center',\nalignSelf:'center'}};var Numpeg=function Numpeg(_ref){var classes=_ref.classes,children=_ref.children;//выводит номера стержней\nreturn __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.numpeg},children);};var NumPeg=__WEBPACK_IMPORTED_MODULE_1_react_jss___default()(pegstyle)(Numpeg);var THLayout=function THLayout(_ref2){var classes=_ref2.classes,children=_ref2.children,onpanelclick=_ref2.onpanelclick;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.towergrid},[1,2,3].map(function(n){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NumPeg,{num:n},n),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__th_pegpanel__[\"default\"],{id:n,onpanelclick:onpanelclick,style:{gridArea:'3 / '+n+' / 11 / '+(n+1)}}));}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:classes.instruct},'\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0438\\u0440\\u0430\\u043C\\u0438\\u0434\\u0443 \\u043D\\u0430 2-\\u0439 \\u0441\\u0442\\u0435\\u0440\\u0436\\u0435\\u043D\\u044C. \\u0411\\u043E\\u043B\\u044C\\u0448\\u0438\\u0439 \\u0434\\u0438\\u0441\\u043A \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u043A\\u043B\\u0430\\u0441\\u0442\\u044C \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044C\\u0448\\u0438\\u0439.'),children);};var style={// основная раскладка\ntowergrid:{display:'grid',position:'relative',alignContent:'end',justifyItems:'center',gridAutoFlow:'column',//gridTemplateColumns: 'repeat(3,1fr) minmax(180px, 1fr)',\n//gridTemplateRows: props => (\"0px 25px 70px  repeat(\" + props.rowcount + \",25px)\" + \" 55px\"),\n'@media  (min-width:600px)':{gridTemplateRows:\"20px 25px 70px  repeat(7,25px) 55px\",gridTemplateColumns:'repeat(3,1fr) minmax(170px, 1fr)'},'@media  (max-width:600px)':{gridTemplateRows:\"80px 25px 70px  repeat(7,25px) 55px\",gridTemplateColumns:'repeat(3,1fr)'},gridGap:'2px 10px',backgroundColor:'#f5f5f5',padding:20,width:'auto',minWidth:500,color:'white'},instruct:{borderTop:'1px solid silver',alignSelf:'stretch',paddingTop:10,color:'green',fontSize:16,gridArea:'11 / 1 / 12 / 6'}};var styledLayout=__WEBPACK_IMPORTED_MODULE_1_react_jss___default()(style);/* harmony default export */ __webpack_exports__[\"default\"] = (styledLayout(THLayout));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.ef2e5a8f.chunk.js","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 150\n// module chunks = 0 1 2","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport injectSheet from 'react-jss'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\n\r\n/*\r\nconst PegPanel = ({ classes, style, children, onpanelclick, id }) => {\r\n    return (\r\n        <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n    )\r\n}\r\n*/\r\nclass PegPanel extends React.Component {\r\n    componentDidMount() {\r\n        this.ro.observe(ReactDOM.findDOMNode(this));\r\n    //console.log(ReactDOM.findDOMNode(PegPanel))\r\n    }\r\n    \r\n    //сделать HOC???\r\n    ro = new ResizeObserver((entries, observer) => {\r\n        for (const entry of entries) {\r\n            const {left, top, width, height} = entry.contentRect;\r\n    \r\n            console.log('Element:', entry.target);\r\n           // debugger;\r\n            console.log(`Element's size: ${ width }px x ${ height }px`);\r\n            console.log(`Element's paddings: ${ top }px ; ${ left }px`);\r\n        }\r\n    });\r\n    \r\n\r\n\r\n\r\n\r\n    render(){\r\n        const { classes, style, children, onpanelclick, id } = this.props\r\n        return(\r\n            <div id={id} onClick={onpanelclick} className={classes.pegpanel} style={style} >\r\n            <div className={classes.lpan}></div>\r\n            <div className={classes.rpan}></div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst style = {\r\n    rpan: {\r\n        borderLeft: '2px solid #55b4fa',\r\n        width: '50%'\r\n    },\r\n    lpan: {\r\n        borderRight: '2px solid blue',\r\n        width: '50%'\r\n    },\r\n    pegpanel: {\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        width:'100%',\r\n        borderRadius:15,\r\n       height: '101%',\r\n        backgroundColor:'#e5fdff',\r\n        zIndex: 0,\r\n        opacity: 1,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        '&:hover': {\r\n            opacity: 0.91,\r\n            backgroundColor:'#49fefe'\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default injectSheet(style)(PegPanel); ///setAreas\n\n\n// WEBPACK FOOTER //\n// ./src/arts/th_pegpanel.jsx","import React from 'react'\r\nimport injectSheet from 'react-jss'\r\nimport PegPanel from './th_pegpanel'\r\n\r\nconst pegstyle = {\r\n    numpeg: {\r\n        textAlign: 'center',\r\n        gridRow: '2/2',\r\n        gridColumn: props => props.num,\r\n        color: 'blue',\r\n        border: '1px solid blue',\r\n        borderRadius: 20,\r\n        height: 20,\r\n        width: 20,\r\n        fontSize: 14,\r\n    lineHeight: '20px',\r\n    //justifySelf: 'center',\r\n    alignSelf: 'center',\r\n\r\n\r\n    }\r\n}\r\nconst Numpeg = ({ classes, children }) => {//выводит номера стержней\r\n    return (\r\n        <div className={classes.numpeg}>{children}</div>\r\n    )\r\n}\r\nconst NumPeg = injectSheet(pegstyle)(Numpeg);\r\n\r\nconst THLayout = ({ classes, children, onpanelclick }) => {\r\n    return (\r\n        <div className={classes.towergrid}>\r\n            {[1, 2, 3].map(n => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <NumPeg num={n}>{n}</NumPeg>\r\n                        <PegPanel id={n} onpanelclick={onpanelclick} style={{ gridArea: `3 / ${n} / 11 / ${n + 1}` }} />\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n            <p className={classes.instruct}>\r\n                Переместите пирамиду на 2-й стержень. Больший диск нельзя класть на меньший.\r\n            </p>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nconst style = { // основная раскладка\r\n    towergrid: {\r\n        display: 'grid',\r\n        position: 'relative',\r\n        alignContent: 'end',\r\n        justifyItems: 'center',\r\n        gridAutoFlow: 'column',\r\n        //gridTemplateColumns: 'repeat(3,1fr) minmax(180px, 1fr)',\r\n        //gridTemplateRows: props => (\"0px 25px 70px  repeat(\" + props.rowcount + \",25px)\" + \" 55px\"),\r\n        '@media  (min-width:600px)':{\r\n            gridTemplateRows: \"20px 25px 70px  repeat(7,25px) 55px\",\r\n            gridTemplateColumns: 'repeat(3,1fr) minmax(170px, 1fr)'\r\n        },\r\n        '@media  (max-width:600px)':{\r\n            gridTemplateRows: \"80px 25px 70px  repeat(7,25px) 55px\",\r\n            gridTemplateColumns: 'repeat(3,1fr)'\r\n        },\r\n\r\n        gridGap: '2px 10px',\r\n        backgroundColor: '#f5f5f5',\r\n        padding: 20,\r\n        width: 'auto',\r\n        minWidth:500,\r\n        color: 'white'\r\n    },\r\n    instruct:{\r\n        borderTop: '1px solid silver',\r\n        alignSelf: 'stretch',\r\n        paddingTop: 10,\r\n        color: 'green',\r\n        fontSize: 16,\r\n        gridArea: '11 / 1 / 12 / 6'\r\n    }\r\n}\r\n\r\nconst styledLayout = injectSheet(style);\r\nexport default styledLayout(THLayout);\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/arts/th_layout.jsx"],"sourceRoot":""}